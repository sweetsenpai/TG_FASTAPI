services:
  pgdb:
    restart: on-failure
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: pgdb
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  aerich:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: >
      bash -c "
      aerich upgrade
      "
    depends_on:
      pgdb:
        condition: service_healthy


  fastapi:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: >
      bash -c "
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload-dir app
      "
    depends_on:
      pgdb:
        condition: service_healthy
      aerich:
         condition: service_completed_successfully

  bot:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "5000:8000"
    command: >
      bash -c "
      python bot/main.py
      "
    depends_on:
      pgdb:
        condition: service_healthy
      aerich:
        condition: service_completed_successfully
